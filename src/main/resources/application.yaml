server:
  port: 8485

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /

idam:
  s2s-auth:
    url: ${S2S_URL}

spring:
  application:
    name: Send Letter Provider
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${LETTER_TRACKING_DB_HOST:send-letter-database}:${LETTER_TRACKING_DB_PORT:5432}/${LETTER_TRACKING_DB_NAME:letter_tracking}${LETTER_TRACKING_DB_CONN_OPTIONS:}
    username: ${LETTER_TRACKING_DB_USER_NAME:letterservice}
    password: ${LETTER_TRACKING_DB_PASSWORD:}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: SendLetterHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true

ftp:
  hostname: ${FTP_HOSTNAME}
  port: ${FTP_PORT}
  target-folder: ${FTP_TARGET_FOLDER}
  smoke-test-target-folder: ${FTP_SMOKE_TEST_TARGET_FOLDER:SMOKE_TEST}
  reports-folder: ${FTP_REPORTS_FOLDER}
  reports-cron: ${FTP_REPORTS_CRON:0 30 0 * * *}
  fingerprint: ${FTP_FINGERPRINT}
  username: ${FTP_USER}
  privateKey: ${FTP_PRIVATE_KEY}
  publicKey: ${FTP_PUBLIC_KEY}
  downtime:
    from: ${FTP_DOWNTIME_FROM:16:00}
    to: ${FTP_DOWNTIME_TO:17:00}
  service-folders:
    - service: cmc_claim_store
      folder: CMC
    - service: send_letter_tests
      folder: BULKPRINT
    - service: divorce_frontend
      folder: DIVORCE
    - service: probate_backend
      folder: PROBATE

scheduling:
  enabled: ${SCHEDULING_ENABLED:false}
  lock_at_most_for: ${SCHEDULING_LOCK_AT_MOST_FOR:PT10M} # 10 minutes in ISO-8601

tasks:
  upload-letters-interval-ms: ${UPLOAD_LETTERS_INTERVAL:30000}
  mark-letters-posted: ${FTP_REPORTS_CRON:0 30 0 * * *}
  stale-letters-report: ${STALE_LETTERS_REPORT_CRON:0 30 1 * * *}

encryption:
  enabled: ${ENCRYPTION_ENABLED:false}
  publicKey: ${ENCRYPTION_PUBLIC_KEY:}

