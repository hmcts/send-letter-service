#!groovy
@Library("Infrastructure") _

List<LinkedHashMap<String, Object>> secrets = [
  secret('test-s2s-secret', 'TEST_S2S_SECRET'),
  secret('test-ftp-user', 'TEST_FTP_USER'),
  secret('test-ftp-private-key', 'TEST_FTP_PRIVATE_KEY'),
  secret('test-ftp-public-key', 'TEST_FTP_PUBLIC_KEY')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

properties([
  parameters([
    string(name: 'PRODUCT_NAME', defaultValue: 'rpe', description: ''),
    string(name: 'APP', defaultValue: 'send-letter-service', description: ''),
    string(name: 'TYPE', defaultValue: 'java', description: ''),
    string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be build and deployed'),
    choice(name: 'SUBSCRIPTION', choices: 'sandbox', description: 'Azure subscriptions available to build in')
  ]),
  [$class: 'GithubProjectProperty', projectUrlStr: 'github.com/hmcts/send-letter-service'],
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

def channel = '#bsp-build-notices'

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {
  enableDbMigration()
  enableSlackNotifications(channel)

  loadVaultSecrets(secrets)
}
