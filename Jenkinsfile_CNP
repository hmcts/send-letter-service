#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "rpe"
def component = "send-letter-service"

def channel = '#bsp-build-notices'

List<LinkedHashMap<String, Object>> secrets = [
  secret('test-s2s-secret', 'TEST_S2S_SECRET'),
  secret('test-ftp-user', 'TEST_FTP_USER'),
  secret('test-ftp-private-key', 'TEST_FTP_PRIVATE_KEY'),
  secret('test-ftp-public-key', 'TEST_FTP_PUBLIC_KEY')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

GradleBuilder builder = new GradleBuilder(this, product)

withPipeline(type , product, component) {
  before('smoketest:preview') {
    withAksClient('nonprod') {
      // vars needed for AKS testing
      env.TEST_S2S_NAME = 'send_letter_tests'
      env.TEST_S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
      env.TEST_FTP_HOSTNAME = 'cmseft.services.xerox.com'
      env.TEST_FTP_PORT = 22
      env.TEST_FTP_FINGERPRINT = 'MD5:89:2d:c1:c4:c8:93:a3:a8:ec:1b:ad:8c:f7:a5:a2:7c'
      env.FTP_TARGET_FOLDER = 'TO_XEROX'
      env.TEST_FTP_REPORTS_FOLDER = 'FROM_XEROX'
      env.TEST_ENCRYPTION_ENABLED = false
    }
  }

  after('test') {
    builder.gradle('integration')
  }

  enableDbMigration()
  enableSlackNotifications(channel)
  enableDockerBuild()
  installCharts()

  loadVaultSecrets(secrets)

  setVaultName("rpe-send-letter")
}
